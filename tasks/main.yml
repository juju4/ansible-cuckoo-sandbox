---

#- fail: msg="This role is only compatible with Ubuntu"
#  when: ansible_distribution != 'Ubuntu'

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
- name: Include version-specific variables for RedHat
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: install packages dependencies
  package: name={{ item }} state=present
  with_items: "{{ cuckoo_pkg }}"

- name: check role user exists
  user: "name={{ cuckoo_user }} home={{ cuckoo_homedir }}"

- name: git clone cuckoo
  git: repo=https://github.com/cuckoosandbox/cuckoo.git
       dest={{ cuckoo_installdir }}
       version={{ cuckoo_release }}
       update=no

- name: check current pip version
  command: "pip --version"
  changed_when: false
  register: pipv
## does not seem to be handled well by ansible pip module
- name: upgrade pip to latest
  command: pip install --upgrade pip
  when: pipv.stdout.find("8.1.2") == -1

- name: update requirements
  replace: "dest={{ cuckoo_installdir }}/requirements.txt regexp={{ item.re }} replace={{ item.rep }} backup=yes"
  with_items:
    - { re: '^http://pefile.googlecode.com/files/pefile-1.2.10-139.tar.gz#egg=pefile', rep: 'https://github.com/erocarrera/pefile/files/192316/pefile-2016.3.28.tar.gz' }
    - { re: '^pyOpenSSL==0.15.1', rep: 'pyOpenSSL==16.1.0' }
    - { re: '^pyasn1==0.1.8', rep: 'pyasn1==0.1.9' }
- name: install pip requirements
  pip: requirements={{ cuckoo_installdir }}/requirements.txt

## https://github.com/lxc/lxd/issues/2507
- name: set capability on tcpdump
  capabilities: path=/usr/sbin/tcpdump capability='cap_net_raw,cap_net_admin=eip' state=present
  when: not (ansible_virtualization_type is defined and (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker"))

#- include: cuckoo-db.yml

- name: ensure cuckoo directories exist
  file: dest={{ cuckoo_installdir }}/log owner={{ cuckoo_user }} mode=0755 state=directory recurse=yes
  with_items:
    - "{{ cuckoo_installdir }}/db"
    - "{{ cuckoo_installdir }}/log"
    - "{{ cuckoo_installdir }}/storage"
    - "{{ cuckoo_installdir }}/data/yara"
    - "{{ cuckoo_installdir }}/data/monitor"
    - "{{ cuckoo_installdir }}/modules/signatures"
    - "{{ cuckoo_installdir }}/analyzer/windows/bin"
    - "{{ cuckoo_installdir }}/agent/android"

- include: cuckoo-vbox.yml
  when: cuckoo_use_vbox is defined and cuckoo_use_vbox
- include: cuckoo-kvm.yml
  when: cuckoo_use_kvm is defined and cuckoo_use_kvm
- include: cuckoo-xen.yml
  when: cuckoo_use_xen is defined and cuckoo_use_xen

- include: cuckoo-signatures.yml
- include: cuckoo-fw.yml

#- include: debian.yml
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

#- include: redhat.yml
#  when: ansible_os_family == "RedHat" or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

